name: CI (DVC pull + tests + CML)

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # Authenticate to Google Cloud using the RAW JSON secret
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 471.0.0"

      - name: Set GCP project
        run: |
          gcloud config set project "${{ secrets.GCP_PROJECT || 'hybrid-shine-474105-e1' }}"
          gcloud info

      - name: Upgrade pip and install deps
        run: |
          python -m pip install --upgrade pip wheel
          pip install -r requirements-ci.txt

      - name: DVC pull data & models from GCS
        run: |
          dvc pull -v

      - name: Run tests (pytest)
        id: tests
        run: |
          set -e
          mkdir -p reports
          pytest -q --maxfail=1 --disable-warnings | tee reports/pytest.txt
          echo "ok=true" >> $GITHUB_OUTPUT

      # Post a PR/commit comment with the test report using CML action
      - name: Publish CML report comment
        if: always()
        uses: dvcorg/cml@v0.12.0
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: |
            cml comment create --pr --commit-sha ${{ github.sha }} <<'MD'
            ## GA4 CI Report

            **Branch:** ${{ github.ref_name }}  
            **Workflow:** ${{ github.workflow }}  
            **Event:** ${{ github.event_name }}

            ### Pytest Output
            ```
            ${{ steps.tests.outcome == 'success' && 'All tests passed ✅' || 'Some tests failed ❌' }}
            ```

            <details><summary>Raw pytest log</summary>

            ```
            ${{ hashFiles('reports/pytest.txt') != '' && github.workspace && 'See attached artifact below' || 'No report found' }}
            ```

            </details>
            MD

      - name: Upload pytest log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-log
          path: reports/pytest.txt
          if-no-files-found: ignore

