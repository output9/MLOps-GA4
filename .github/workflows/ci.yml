name: GA4 CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install base deps (pin to avoid build failures)
        run: |
          python -m pip install --upgrade pip
          pip install \
            "dvc[gcs]==3.59.0" \
            "pytest==7.4.4" \
            "pandas==2.1.4" \
            "numpy==1.26.4" \
            "scikit-learn==1.3.2" \
            "joblib==1.3.2"
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi

      # ===== AUTH USING YOUR BASE64 SECRET =====
      - name: Write GCP key from BASE64 secret
        env:
          GCP_CREDENTIALS_B64: ${{ secrets.GCP_CREDENTIALS_B64 }}
        shell: bash
        run: |
          set -e
          KEY_FILE="${RUNNER_TEMP}/gcp-key.json"
          echo "$GCP_CREDENTIALS_B64" | base64 --decode > "$KEY_FILE"
          # sanity check JSON
          python -c "import json,sys; json.load(open('$KEY_FILE'))"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$KEY_FILE" >> "$GITHUB_ENV"

      - name: Install gcloud CLI
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg >/dev/null
          sudo apt-get update -y && sudo apt-get install -y google-cloud-cli

      - name: Authenticate gcloud
        run: |
          gcloud auth activate-service-account --key-file "$GOOGLE_APPLICATION_CREDENTIALS"
          # OPTIONAL: set project if needed (replace with your project ID)
          gcloud config set project hybrid-shine-474105-e1
          gcloud auth list

      # ===== DVC PULL =====
      - name: DVC pull
        run: dvc pull -v

      # ===== TESTS =====
      - name: Run pytest
        run: |
          set -e
          pytest -q --maxfail=1 --disable-warnings | tee pytest.log
          echo "## âœ… Pytest summary" > report.md
          echo "" >> report.md
          echo '```' >> report.md
          tail -n 200 pytest.log >> report.md || true
          echo '```' >> report.md

      # ===== CML COMMENT (v2) =====
      - name: Setup CML
        uses: iterative/setup-cml@v2

      - name: Comment report with CML
        if: ${{ always() && github.event_name == 'pull_request' }}
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BODY="$(cat report.md)"
          cml comment create --pr "$BODY"

